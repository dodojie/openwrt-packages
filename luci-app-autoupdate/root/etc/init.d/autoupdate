#!/bin/bash /etc/rc.common
START=99
Script=/bin/AutoUpdate.sh
Corn_Task="bash ${Script} -u"

start_instance() {
	[[ ! -f ${Script} ]] && exit 1
	local enable
	config_get_bool enable $1 enable
	if [[ ${enable} == 1 ]]; then
		config_get enable_proxy $1 enable_proxy
		config_get force_write $1 force_write
		config_get week $1 week
		config_get minute $1 minute
		config_get hour $1 hour
		config_get enable_proxy $1 enable_proxy
		[[ ${week} == 7 ]] && week="*"
		corn_rm
		[[ ${enable_proxy} == 1 ]] && Corn_Task="${Corn_Task} -P"
		[[ ${force_write} == 1 ]] && Corn_Task="${Corn_Task} -F"
		echo "Corn: [${minute} ${hour} * * ${week} ${Corn_Task}]"
		echo -e "${minute} ${hour} * * ${week} ${Corn_Task}		#AutoUpdate" >> /etc/crontabs/root
		/etc/init.d/cron restart
	else
		uci_set autoupdate autoupdate force_write 0
		uci_set autoupdate autoupdate enable_proxy 0
		corn_rm
	fi
	config_get github $1 github
	echo "Github: ${github}"
	bash ${Script} -C ${github} > /dev/null 2>&1
	exit 0
}

uci_set() {
	uci set $1.@$2[0].$3=$4
	uci commit $1
}

corn_rm() {
	[[ $(cat /etc/crontabs/root) =~ "#AutoUpdate_CornTask" ]] && {
		echo "Removing corn task ..."
		sed -i "/#AutoUpdate/d" /etc/crontabs/root
		/etc/init.d/cron restart
	}
}

start() {
	bash ${Script} --clean > /dev/null 2>&1
	echo "Starting AutoUpdate service ..."
	config_load autoupdate
	config_foreach start_instance autoupdate
}

service_triggers() {
	procd_add_reload_trigger "autoupdate"
}

disable() {
	echo "Disabling AutoUpdate service ..."
	uci_set autoupdate autoupdate enable 0
	uci commit autoupdate
	corn_rm
}

service_triggers() {
	procd_add_reload_trigger "autoupdate"
}